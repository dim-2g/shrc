// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$email-gray-name: 'email-gray';
$email-gray-x: 36px;
$email-gray-y: 0px;
$email-gray-offset-x: -36px;
$email-gray-offset-y: 0px;
$email-gray-width: 18px;
$email-gray-height: 14px;
$email-gray-total-width: 54px;
$email-gray-total-height: 38px;
$email-gray-image: '/assets/template/css/sprites/sprite.png';
$email-gray: (36px, 0px, -36px, 0px, 18px, 14px, 54px, 38px, '/assets/template/css/sprites/sprite.png', 'email-gray', );
$email-name: 'email';
$email-x: 0px;
$email-y: 24px;
$email-offset-x: 0px;
$email-offset-y: -24px;
$email-width: 18px;
$email-height: 14px;
$email-total-width: 54px;
$email-total-height: 38px;
$email-image: '/assets/template/css/sprites/sprite.png';
$email: (0px, 24px, 0px, -24px, 18px, 14px, 54px, 38px, '/assets/template/css/sprites/sprite.png', 'email', );
$eye-name: 'eye';
$eye-x: 18px;
$eye-y: 24px;
$eye-offset-x: -18px;
$eye-offset-y: -24px;
$eye-width: 18px;
$eye-height: 12px;
$eye-total-width: 54px;
$eye-total-height: 38px;
$eye-image: '/assets/template/css/sprites/sprite.png';
$eye: (18px, 24px, -18px, -24px, 18px, 12px, 54px, 38px, '/assets/template/css/sprites/sprite.png', 'eye', );
$marker-gray-name: 'marker-gray';
$marker-gray-x: 0px;
$marker-gray-y: 0px;
$marker-gray-offset-x: 0px;
$marker-gray-offset-y: 0px;
$marker-gray-width: 19px;
$marker-gray-height: 24px;
$marker-gray-total-width: 54px;
$marker-gray-total-height: 38px;
$marker-gray-image: '/assets/template/css/sprites/sprite.png';
$marker-gray: (0px, 0px, 0px, 0px, 19px, 24px, 54px, 38px, '/assets/template/css/sprites/sprite.png', 'marker-gray', );
$search-name: 'search';
$search-x: 19px;
$search-y: 0px;
$search-offset-x: -19px;
$search-offset-y: 0px;
$search-width: 17px;
$search-height: 17px;
$search-total-width: 54px;
$search-total-height: 38px;
$search-image: '/assets/template/css/sprites/sprite.png';
$search: (19px, 0px, -19px, 0px, 17px, 17px, 54px, 38px, '/assets/template/css/sprites/sprite.png', 'search', );
$spritesheet-width: 54px;
$spritesheet-height: 38px;
$spritesheet-image: '/assets/template/css/sprites/sprite.png';
$spritesheet-sprites: ($email-gray, $email, $eye, $marker-gray, $search, );
$spritesheet: (54px, 38px, '/assets/template/css/sprites/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
